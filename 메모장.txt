지금 문제점
chat에 있는 room.html이랑
body.html이랑 연결 안되어있음
room.html이 따로 연동 되고 있음

버튼 모양 안맞음 시간되면 수정하기.

룸을 확실하게 나누자. 

===============================================

1. Java Script의 역사에 대해 안다.
2. HTML에서 JS를 사용하는 방법 2가지를 안다.
3. undefined와 null과 ''의 차이를 안다.
4. 원시형 데이터타입과 참조형 데이터타입을 안다.
5. var 와 let의 차이를 안다.
let은 재할당이 불가하다 var 쌉가능
6. 함수를 정의하고 호출할 수 있다.
7. 객체를 정의하고 사용할 수 있다.
8. 이벤트를 처리할 수 있다.
9. jquery를 사용할 수 있다.
10. 브라우저의 개발자 모드를 사용할 수 있다.
11. 디버거를 사용할 수 있다.
12. 단끼리는 띄우는 구구단출력을 3분만에 짤수있다.
13. 간단한 화살표함수를 사용할 수 있다.






=====================================================
prompt 에 입력한 값은 무조건 문자형으로 들어간다.
그렇게 되니
// const mathScore = prompt("수학점수를 입력하세요.")
// const engScore = prompt("영어점수를 입력하세요.")
// const result = (mathScore + engScore) / 2;
// console.log(result);
에 수학 50과 영어 40을 입력하면
2520이라는 값이 출력이 된다.
문자 25와 문자 20을 이어주게 되니 그렇게 표시가 된다.

반면 
const mathScore = 50;
const engScore = 40;
const result = (mathScore+engScore) / 2;
를하면 정상값인 45가 출력이 된다.

/(나누기)기는 왜 문자형을 숫자형으로 인식해서 /(나누기)가 작용이 된 것일까?
이것은 자동 형변환이 되어서 그런다 문자형"6"/"2"를 하게 된다면 이 문자형을
숫자형으로 자동형변환을 하게 된다. 이렇게 되면 오류가 나더라도 찾기가 어려워진다.
그렇기에 명시적 형변환을 해줘야한다.

문자형 String()
전부 "문자형"으로 출력이 된다.

숫자형 Number()
"1234"라는 문자형으로 입력해도 숫자 1234로 입력된다.
(true)1과
(false)0으로 출력이 된다.
그밖에 문자를 입력하면 Nan이 출력된다.

블린형 Boolean()
false 유형만 기억하면 된다.
숫자 0
음수
빈 문자열 ""
null
undefined
NaN
이 외에는 모두 true(트루~)

주의사항
Number(null)//0
Number(undefined)//NaN

나이 입력에 취소 버튼을 누르게 된다면 null의 값을 불러오게 된다. 그러니 0의 값이 됨

Boolean(0) // false
Boolean('0') // true

참과 거짓은 약속임. 인간 기준 아님

Boolean('') // false
Boolean(' ') // true

숫자 0이거나 빈 공백이 없는 경우에는 false다
버그 없는 코딩을 할려면 주의사항 외워라 

그럼 블린은
이분법인데

3개
문자 숫자

let a = Boolean(-1)
let b = -1;
console.log(a)
if(b==false){
  console.log("a는 false임");
}else{
  console.log("a는 false가 아님")
}

중복의제거
이름으로 값의 속성을 유추
30
30cm를 말하는건지 30m를 말하는건지 30살을 말하는지 30기가를 말하는건지 모르지만
weight = 30


원시형 
숫자
블린
스트링
undefined
nun

원시형 빼고는 다 참조형

논리 연산자
or(||) 여러개 중 하나라도 true 면 true 즉, 모든값이 false일때만 false를 반환
and(&&) 모든값이true 면 true 즉 ,하나라도 false 면 false를 반환
not(!) true면 false false면 true

스티브잡스는 한국인 이거나 or, 남자이다 true
스티브잡스는 한국인이고 and, 남자이다 false

평가
or는 첫번째 true 를 발견하는 즉시 평가를 멈춤
스티브잡스는 남자 이거나 or, 한국인 이거나, 군인 이거나.. true
평가 첫번째 보기에 true가 있기에 바로 평가가 true가 됨

and는 첫번째 false를 발견하는 즉시 평가를 멈춤
스티브잡스는 남자이고 and,한국인 이며, 군인인 동시에.. false
2번째에 바로 평가를 멈춤

and 가 or보다 우선순위가 높다

평가
운전면허가 있고 시력이 좋은 여군

전체 군인의 80%가 운전면허가 있고 시력은 60% 여군 비율은 7%로이다.

여군인데 시력이 좋고 운전면허가 있는 사람이라고 코딩을 하는 것이 좋다.
이러한 문법이 성능 최적화 문법이다.

let j = 2
for(let i = 2; i < 10; i++){
    console.log(i+"*"+j+"="+(i*j))
}

질문
%d
%s 적용

while 문

let i = 0;
while(i<10){
console.log(i);
i++;}

do.. while
let = 0;

do{
//코드
i++;
}while(i<10)

do에 있는 i++;를 실행하고 while 문을 실행한다.



반복문을 빠져나오는 방법

break. continue

break 멈추고 빠져나옴

while(true){
let answer = confirm('계속 할까요?');
if(!answer){
break;
}
}


continue 멈추고 다음반복으로 진행

for(let i = 0; i <10; i++){
if(i%2){
continue;
}
console.log(i)
}

for 문이랑 while문 차이점?
무한반복?이냐?
while 조건성립하는 이상 무한 반복


switch 문
if else 사용하면 몰라도 됨
하지만 사용하는 방법을 알기위해.

switch(평가){
case A:
// A일때 코드
case B:
// B일때 코드
...
}

위 코드와
아래 코드가 같다.

if(평가 == A){
//A일때 코드
}else if(평가 == B){
//B일때 코드
}

let fruit = prompt

switch(fruit){
    case "사과" :
        console.log("100원 입니다.");
        break;
    case "바나나" :
        console.log("200원 입니다.");
        break;
    case "키위" :
        console.log("300원 입니다.");
        break;
    case "멜론" :
        console.log("400원 입니다.");
        break;
    case "수박" :
        console.log("500원 입니다.");
        break;
    case "복숭아" :
        console.log("600원 입니다.");
        break;
}

break를 넣지 않으면 그 이하 줄의 코드가 다 실행이 된다.

let fruit = prompt("무슨 과일을 사고 싶으신가요?");

switch(fruit){
    case "사과" :
        console.log("100원 입니다.");
        break;
    case "바나나" :
        console.log("200원 입니다.");
        break;
    case "키위" :
        console.log("300원 입니다.");
        break;
    case "멜론" :
        console.log("400원 입니다.");
        break;
    case "수박" :
        console.log("500원 입니다.");
        break;
    case "복숭아" :
        console.log("600원 입니다.");
        break;
    default :
        console.log("그런 과일은 없다");
}

없는 값을 입력하면 나오는 출력 default를 한다.

 
function(함수)

console, alert, confirm


